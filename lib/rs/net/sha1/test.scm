
(define (test-set)
  (let ((s (make-random-state 123)))
    (map
     (lambda (l)
       (list->string (map (lambda (i)
                            (integer->char 
                             (+ 64 (next-random s 27))))
                          (range l))))
     (range 129))))

(define (run-test)
  (for-each
   (lambda (testcase answer)
     (let ((a (sha1-digest testcase))
           (b (sha1-digest (open-input-string testcase))))
       (if (not (string=? answer a))
           (error "Test case ~s (<string>) failed" testcase))
       (if (not (string=? answer b))
           (error "Test case ~s (<input-port>) failed" testcase))))
   (test-set)
   (string-split *open-ssl-sha1-output* #\newline))
  'Passed)

(define *open-ssl-sha1-output*
  ;; Using 'openssl dgst -sha1'
#"USING_OPENSSL
da39a3ee5e6b4b0d3255bfef95601890afd80709
c032adc1ff629c9b66f22749ad667e6beadf144b
364aa96a89731a2ea5eee6fb887f9db920f9ac80
d5c9ac4f06e06cb1c0043de419e0dbf5ade2b515
27b63b24ef5f6cfe1b2a05638fd64429b08e612b
ffaf2d5d5d902fb789aa93f81462925d04403866
d53ed51762de9872f3cd33e77aa9f70adaae858d
2358b95545d7b97504f6839de4d2eec2af9352cb
3d37a7d117ae39c74fe591484b4ae01faf509654
2662260c34697e78146cf67f7f9ef662a1ed8719
c9a4ddaccb152715eafc605e9eb7a0b7f8ecd661
4cccc9833563d58241b78444319bd1bea85fb837
af7a7a5a8be4f17e7418bb38250e030129f52590
199186e9e06cb85ec922488f7dbe606937b15de0
c2b75601f3f15e0103b1b96eecbc9aa0155db502
e3685f533595d077c8fe908e315a22ff2e4d9f31
767f801736b21e89d8d8db4eac85798cd9323e8a
7cefa87b35bffc10f32cedbb748dc2a9ec435415
ec5e315e18d3fe9e6806aadf421fe8418e7dbac1
89b5627eefebd0281716142f3577d5cd2a4f789b
ff347e387709f5ec76ebdde8204c22fc0ea73b14
37e017e41c2c0b49ec89e49971fc512f973c2433
544070b409d822aed8a9a881bfba90e1ec4674e3
2da3cb1909b4889a97880d689d89269c088e840b
2e0dacc6db11d9c25b5b85960e90fa9e8a488e6c
642ad31451c3aac09cdbdc468ebc3f1b31cf1132
8246dae3cfb2eecd88068be8022a1c7ef3b4a885
9eadd5c762df27f00527164272cf693e6df82ac8
211c17759fe7a6f0050c6d5e6ff5f9cc25684110
23a4046a17884675e53918912b8a9a34a920b612
9b88ec192664aee5e588dc634d572fe7a6cdf954
bc43489b429ed618ac791129cd117a18a2d3b49e
2792da5d848fe441a6311662857b7a9cdf8fab2d
364c57bc651be62a9157bde1c27043d7900730b4
b54f6fb63424cc860b9f924c98732e7080aa3841
d6d98ebd323ac6079b26ebbb10e0bb23039e92bf
d80786cfaafab1043e7ff5b474a054e243bd81a2
4e7023a88b05f0bc8b01f4f3fa8a4f0983f1e558
6e6f2177ef386c0ea88705bcc1576afd827e899d
c5c4a839f8c5bdf1098cb756afd74812d82194cf
aa6d8ca90a4038c0ddf31f411091a042ede1ba2d
9583bacca3b33e3cd8e09286c1f800cfeb1bd82e
1124a05fab77ef30c774b7bebe70ab2e7adc473d
fb1002ad94708c38d147b576c3cd10fc4fbb247a
fd9cb354e145533293a5978d825640850da16691
96fbbada9349f4bc2aecdcb257537ed7ace6e69a
ffe8ac452226981d37e5619d30cd22caa51823d5
8f9f7965012d059c7761b0f6d1c6d1be7bf41d70
192180f6d65d374a10cc197035aeea7e4213167c
2c493e6371d43c5e04e5580f275cb3122736d1c4
66c549e2ae5cb9e57ead0ce0a9c8ea6bed6bf80d
5e1ebe7282e49606c4d933f8a6beecd3d57b9a82
299ca87d9f077e5a7c14335242d0c62a77e917c0
e71168d651828c34818c2d1836f75d36700a9c54
1f8d4b664f39c3811857ac9f75e74f92481c0a33
4decf1589e313ac15f56c9b16c70fd22a05b42fc
fdb4882080f9a403a91d410f85e13304b8935c93
71f3dd99e3fec80efba229a7d21cbb6dccad5eea
245b4de7409637822589480b6fa02bfc4f39cc14
c33adbd0a782ee3621bb0bd65dcbc2dd67d012f8
77a60ab75abe02b4d243ba2a48e0a9de57accb41
4780a87f8c84646a5181c6ff968fe3defc3837af
ac3c921cb662a15ce2ca555cb8d74b1e4a9b9158
6fa1cf6da76ba403d9d7289aab53f370d7dd1dbd
dc80a2106b8104d205d80e605198e1cc938fe992
46b2389062fc0a6c7e5e81f0b9ecbe87b7b8c869
bb2afd3f60207c6a970c25f4d991cb816ac24fa6
f4e75805928385d5244ea9b73093653dc1473501
595d82a0c3be25002efd3b1fe3950843f6d112ca
cce17c9cec2f564bb4589492ae43c43deb71d172
ecf2c2b5ef631e771c078694832b69ac87952442
5e2a6e3bcac8637a3fd70466b1e5bd776b9595af
380add6f152eec40097a6084928f56154f6f5d46
01519b7012560645ab7713f453379d0d155774e4
9190710f5edef7c80554b102efba5a60e67cb7f6
3bdb18f88a14cff913f5716d314ed6a40a2edccc
d9db972d7fdd9ea9ae4a65218b71b72c86df77ff
17695e3e516362a5ffdf25d95fe5441131c894fd
08a9af3db078ab6a27b685e0bdd63db4fdc8bda4
dccdccacb0ae87b191d3f921c5121387c6592563
9400ee14800cdee75d641611ea8c88cd778eb5fa
c6e9de7c9d7c69a6515465de4589752af927ec39
ea389d3b4ed3527d531243a1912eb3ffb6a8055f
17c298322512e346ca572bd68a670074a22a9427
7c3842aaf99766e403da34e6589a15d1683540cb
c13817ddcfd8e470dd2146714f1d780e032bca27
32e34ac3e81e15b7d5be7cb4c989b57eeb87db4f
2aa36d6b0514d69bf785a69d057e603d4fa2bbbc
006c40e51200aaa904dfa599907bf3cbd052c0e9
6064d4a1876bcbd1d77eef30c1dab48f894b400f
3c2561bd75d841b4f2f7663f61572d1d153445f2
7d3e95d1918cc8aa6a862223bb8bbb28900b5c82
badec5794d1deda49cc750389b3b8c0f05e4daee
59f6d08e37b22b8c983a20d671f378612b0c3ff3
864a0e70ba8dc3354edb794934b68b5e9523379e
6fa62dc3c7feaee3cb66e14b4cad9d13cb17e1d9
d809fbb25ebb1750620ef4ad0c66ac423cbd425d
f725a2abf98351407f7cb28e2b3af4d7d2ac569b
13b6ddd2a5852f1ed0dbe3589df98215b8132848
b52a25a51a74a26acb6cf7e68cdc1cf789c6ee06
a31d2210b529c4f898d017fc037c2b94a036dd4a
0f775c8e98d81d666a66aab64404e329632c26e8
346116f29297717c9225da359461e613be0d5ca5
4b02627069ab69fcef2f0ea505576a21888e6082
295ad626c3bf8995a0a0e035bf37ef2a0a99fb43
ae6e533c3896d5d89f77fa2d9c315a11202a548d
9c2904c4d350ff7db3adac38bb417db98356538b
7b2b9b984cae581a2284597e8c99865af96a4508
394ffc08526d9c21295cf391f5a749fdbaa9c5ce
3562649e85506ccab9e9538e088968b0d78b7ba7
10454650e854f3d8d97159f31d1f2a5444ee16a6
cd749d4d43c843b55ec1cb9297aab96a24343e98
ff5a967314f329cc380a4a6a4a2dcfdfe8660db3
7efbe36849fb26b2d6e6bd7bfefa0210baa2ab9b
78c40381a932238bdcf7e9fd079d07e87079f838
d17a8f86c1d79bf38f2694efb2226b8179471424
7b25c3ec410c274032d5b1b8d7af9860b8f09bdd
d98e7de5a661a955be9ac5294193d03b33c3998c
4891989455eec16a602e8b151bb37e9cd69b1447
895c7f24a8b92c20d9db8c6c9375103d8c3c2425
d694c79f587869a19807f71a9081f69c0deb9bd8
002fa7d584326893895eba08140e00e36dc20ce8
3abde5208b6611b7e44f35bca423afe30abb0dd0
7b1308f19d9391734e2d86086e7a3f7dd6de1df2
2b8265b2e60b4521c62a7c4742b8a7216b7f88d0
40489ff448d1405b57b88f9f32a358e5c65eff8a
086fff337961300b596f41fac061a8464b8bff7e
55951a1d9ec7079da2a0306e6d537b386d22e714
2a2daf790a6be906e19cc9ebe3433c11f52c72d2
#"USING_OPENSSL
)

(define B (string-append "abc" (sha1-message-trailer 3)))

(define (t m)
  (bind ((h0 h1 h2 h3 h4 (SHA-block
                          (string-append m (sha1-message-trailer 
                                            (string-length m))))))
    (format #t "--- ~08x ~08x ~08x ~08x ~08x\n" h0 h1 h2 h3 h4)
    (list h0 h1 h2 h3 h4)))

